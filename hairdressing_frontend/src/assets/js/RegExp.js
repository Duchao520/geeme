const reg = {
    password: /^(?=[A-z]*[0-9])(?=[0-9]*[A-z])[A-z0-9]{6,16}$/, // 账号密码 6~16长度至少一个数字和字母组合,区分大小写字母
    phone: /^(1[3-9][0-9]{9})$/, // 手机号码
    tel: /^(1[3-9][0-9]{9}|0[1-9][0-9]{1,2}-[0-9]{7,8}|400-\d{7})$/, // 11位手机号, 0xx?-xxxxxxx?, 400-XXXXxxx
    email: /^[\w!#$%&'*+/=?^_`{|}~-]+(?:\.[\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\w](?:[\w-]*[\w])?\.)+[\w](?:[\w-]*[\w])?$/, // 邮箱
    latitude: /^(-|\+)?(\d|[1-8]\d)(\.\d{0,6})$/, // 维度 -90(不含)~90(不含)之间的小数，小数最多6位
    longitude: /^(-|\+)?(\d{1,2}|1([0-7]\d))(\.\d{0,6})$/, // 经度 -180(不含)~180(不含)之间的小数，小数最多6位
    parkingFullName: /^[A-z0-9-\u4e00-\u9fa5]{0,256}$/, // 停车场全称 256字符长度的汉字、字母和减号(-)组合
    name: /^[A-z0-9-\u4e00-\u9fa5]{2,255}$/, // 停车场简称 255字符长度的汉字、字母和减号(-)组合
    ip: /^((25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.){3}(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)$/, // IP地址
    // 18位 | 15位身份证
    idCard: /(^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{2}[0-9Xx]$)/,
    time: /^[1-9]\d{0,3}$/, // 1~9999
    num: /^[0-9]\d{0,3}$/, // 0~9999
    port: /^([0-9]\d{0,3}|([1-5]\d{4})|(6[0-4]\d{3})|(65[0-4]\d{2})|(655[0-2]\d{1})|(6553[0-5]))$/, // 0~65535
    // [金额 - 1] 0~9999.99 ,后端可能最大值是 327
    floatNum: /^([0-9]\d{0,3}|[0-9]\d{0,3}(\.\d{0,2}))$/,
    // [金额 - 2] 0 ~ 327 [ 327不可以带小数，调用函数fix2Float(num, true) ]!!!
    Lt_327_floatNum: /^(3[0-2][0-7]|2\d\d|2\d\d(\.\d{0,2})|1\d\d|1\d\d(\.\d{0,2})|[1-9]\d|[1-9]\d(\.\d{0,2})|\d|\d(\.\d{0,2}))$/,
    description: /^[A-z0-9-\u4e00-\u9fa5]{0,512}$/,
    remark: /^[A-z0-9-\u4e00-\u9fa5]{0,32}$/,
    jobName: /^[A-z-\u4e00-\u9fa5]{2,16}$/,
    qq: /[1-9][0-9]{4,}/,
    contact: /^[A-z0-9-\u4e00-\u9fa5]{1,11}$/,
    positiveInteger: /^\d+$/, //非负整数
    percent: /^(\d{1,2}(\.\d{0,2})?|100)$/, // 百分比.小数点2位 0~100, 0.01~99.99
    discount: /^([0-9](\.[0-9]{0,2})?|10)$/, // 折扣 0~10, 0.01~9.99
    price: /^[0-9]+(\.[0-9]{0,2})?$/, // 价格
    weixin: /^[a-zA-Z]{1}[-_a-zA-Z0-9]{5,19}$/,
    yearDays: /^([0-3][0-5][0-9]|36[0-5]|[0-2][0-9]{1,2}|[0-9]{1,2})$/,
    test: '',
}

function checkReg(reg, string) {
    return reg.test(string && string.toString())
}

export { reg, checkReg }